{namespace lime.webgl.shaders.toon}

/*
Abstract: Brick Shader (from the "orange book")
			 
Copyright (C) 2002-2004  3Dlabs Inc. Ltd.
All rights reserved.

See 3Dlabs-License.txt for license information
*/

/***/
{template .vertex}
{literal}

attribute vec4 position;
attribute vec4 normal;

uniform mat4 modelViewMatrix;
uniform mat4 projMatrix;
uniform mat4 normalMatrix;

varying vec3 currentNormal;

void main(void)
{
	currentNormal = normalize((normalMatrix * normal).xyz);
	gl_Position = projMatrix * modelViewMatrix * position;
}

{/literal}
{/template}


/***/
{template .fragment}
{literal}

precision highp float;

uniform vec3 DiffuseColor;
uniform vec3 PhongColor;
uniform float Edge;
uniform float Phong;
varying vec3 currentNormal;

void main (void)
{
	vec3 color = DiffuseColor;
	float f = dot(vec3(0,0,1),currentNormal);
	if (abs(f) < Edge)
		color = vec3(0);
	if (f > Phong)
		color = PhongColor;

	gl_FragColor = vec4(color, 1);
}


{/literal}
{/template}